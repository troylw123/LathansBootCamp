<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="BootCamp.Views.VisualStatePage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:prism="http://prismlibrary.com"
    xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
    Title="{Binding Title}"
    prism:ViewModelLocator.AutowireViewModel="True">

    <ContentPage.Resources>

        <Style TargetType="Entry">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>

                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="Focused">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightYellow" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <VisualState.Setters>
                                <Setter Property="BackgroundColor" Value="LightBlue" />
                                <Setter Property="TextColor" Value="White" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>

                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="Green" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="TextColor" Value="LightCoral" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="ValidationMessage" TargetType="Label">
            <Setter Property="FontSize" Value="Micro" />
            <Setter Property="FontAttributes" Value="Italic" />
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Normal">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Valid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="False" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="True" />
                                <Setter Property="TextColor" Value="Red" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style
            x:Key="PasswordStrength"
            BasedOn="{StaticResource ValidationMessage}"
            TargetType="Label">
            <Setter Property="VisualStateManager.VisualStateGroups">
                <VisualStateGroupList>
                    <VisualStateGroup x:Name="Strength">
                        <VisualState x:Name="Invalid">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="True" />
                                <Setter Property="TextColor" Value="Red" />
                                <Setter Property="Text" Value="6 or more characters required" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Weak">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="True" />
                                <Setter Property="TextColor" Value="Blue" />
                                <Setter Property="Text" Value="That's okay but bigger is better" />
                            </VisualState.Setters>
                        </VisualState>
                        <VisualState x:Name="Strong">
                            <VisualState.Setters>
                                <Setter Property="IsVisible" Value="True" />
                                <Setter Property="TextColor" Value="Green" />
                                <Setter Property="Text" Value="Well done, that's nice and strong!" />
                            </VisualState.Setters>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateGroupList>
            </Setter>
        </Style>

        <Style x:Key="formLabelTitle" TargetType="Label">
            <Setter Property="TextColor" Value="#333333" />
            <Setter Property="FontSize" Value="Small" />
            <Setter Property="FontAttributes" Value="Bold" />
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>

        <Style x:Key="formHelpText" TargetType="Label">
            <Setter Property="HorizontalTextAlignment" Value="End" />
            <Setter Property="TextColor" Value="LightGray" />
            <Setter Property="FontSize" Value="Micro" />
            <Setter Property="FontAttributes" Value="Italic" />
            <Setter Property="Margin" Value="0,20,0,0" />
        </Style>

        <Style x:Key="submitButton" TargetType="Button">
            <Setter Property="Margin" Value="20" />
            <Setter Property="BackgroundColor" Value="CornflowerBlue" />
            <Setter Property="HorizontalOptions" Value="Fill" />
            <Setter Property="TextColor" Value="White" />
        </Style>

        <Style x:Key="sideBar" TargetType="BoxView">
            <Setter Property="Margin" Value="0,10,0,0" />
            <Setter Property="BackgroundColor" Value="CornflowerBlue" />
            <Setter Property="HeightRequest" Value="5" />
            <Setter Property="HorizontalOptions" Value="Start" />
            <Setter Property="WidthRequest" Value="100" />
        </Style>

        <ResourceDictionary>
            <xct:InvertedBoolConverter x:Key="InvertedBoolConverter" />
        </ResourceDictionary>

    </ContentPage.Resources>

    <ScrollView>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <StackLayout Padding="30,40">

                <!--  Header  -->
                <Label FontAttributes="Italic" Text="Welcome" />
                <Label
                    FontAttributes="Bold"
                    FontSize="Large"
                    Text="Create your account" />
                <BoxView Style="{StaticResource sideBar}" />
                <StackLayout
                    Margin="0,10"
                    HorizontalOptions="End"
                    Orientation="Horizontal">
                    <Label Text="Disable Entry Fields" VerticalTextAlignment="Center" />
                    <CheckBox x:Name="EntryEnabled" IsChecked="False" />
                </StackLayout>
                <!--  Display Name  -->
                <Grid>
                    <Label Style="{StaticResource formLabelTitle}" Text="Display Name" />
                    <Label Style="{StaticResource formHelpText}" Text="All fields are mandatory" />
                </Grid>
                <Entry x:Name="UserName" IsEnabled="{Binding Source={x:Reference EntryEnabled}, Path=IsChecked, Converter={StaticResource InvertedBoolConverter}}" />
                <Label
                    x:Name="UserNameMsg"
                    Style="{StaticResource ValidationMessage}"
                    Text="You have to enter a display name" />

                <!--  Email  -->
                <Grid>
                    <Label Style="{StaticResource formLabelTitle}" Text="Email" />
                </Grid>
                <Entry x:Name="Email" IsEnabled="{Binding Source={x:Reference EntryEnabled}, Path=IsChecked, Converter={StaticResource InvertedBoolConverter}}" />
                <Label
                    x:Name="EmailMsg"
                    Style="{StaticResource ValidationMessage}"
                    Text="Valid Email address required" />

                <!--  Password  -->
                <Grid>
                    <Label Style="{StaticResource formLabelTitle}" Text="Password" />
                    <Label Style="{StaticResource formHelpText}" Text="six or more characters" />
                </Grid>
                <Entry
                    x:Name="Password"
                    IsEnabled="{Binding Source={x:Reference EntryEnabled}, Path=IsChecked, Converter={StaticResource InvertedBoolConverter}}"
                    IsPassword="True" />
                <Label
                    x:Name="PasswordMsg"
                    Style="{StaticResource PasswordStrength}"
                    Text="Password must be 6 characters or more" />

            </StackLayout>

            <Button
                x:Name="SubmitButton"
                Grid.Row="1"
                Style="{StaticResource submitButton}"
                Text="Create Your Account" />



        </Grid>
    </ScrollView>
</ContentPage>